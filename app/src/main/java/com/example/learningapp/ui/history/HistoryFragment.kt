package com.example.learningapp.ui.history

import android.content.Context
import android.graphics.Color
import android.os.Bundle
import android.util.Log
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.LinearLayout
import android.widget.TextView
import android.widget.Toast
import androidx.fragment.app.Fragment
import com.example.learningapp.R
import com.google.firebase.firestore.FirebaseFirestore
import com.google.firebase.firestore.Query
import java.text.SimpleDateFormat
import java.util.*

class HistoryFragment : Fragment() {

    private lateinit var historyContainer: LinearLayout
    private val db = FirebaseFirestore.getInstance()

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        val v = inflater.inflate(R.layout.fragment_history, container, false)
        historyContainer = v.findViewById(R.id.historyContainer)
        return v
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)
        loadHistory()
    }

    private fun loadHistory() {
        val shared = requireContext().getSharedPreferences("UserPrefs", Context.MODE_PRIVATE)
        val username = shared.getString("USERNAME", "")?.trim() ?: ""

        Log.d("HistoryFragment", "ƒêang t·∫£i l·ªãch s·ª≠ cho user: [$username]")

        if (username.isEmpty()) {
            Toast.makeText(requireContext(), "Ch∆∞a c√≥ username", Toast.LENGTH_SHORT).show()
            addLine("‚ö†Ô∏è Ch∆∞a ƒëƒÉng nh·∫≠p n√™n kh√¥ng th·ªÉ xem l·ªãch s·ª≠", gray = true)
            return
        }

        db.collection("results")
            .whereEqualTo("username", username)
            .orderBy("timestamp", Query.Direction.DESCENDING)
            .get()
            .addOnSuccessListener { snap ->
                if (snap.isEmpty) {
                    addLine("üì≠ Kh√¥ng c√≥ l·ªãch s·ª≠ n√†o.", gray = true)
                    return@addOnSuccessListener
                }

                for (doc in snap) {
                    val category  = doc.getString("category") ?: "Kh√¥ng r√µ ch·ªß ƒë·ªÅ"
                    val score     = doc.getLong("score") ?: 0
                    val total     = doc.getLong("total") ?: 0
                    val timestamp = doc.getLong("timestamp") ?: 0

                    val dateStr = try {
                        SimpleDateFormat("dd/MM/yyyy HH:mm", Locale.getDefault()).format(Date(timestamp))
                    } catch (e: Exception) {
                        "Kh√¥ng r√µ th·ªùi gian"
                    }

                    addLine("üìù $category\nƒêi·ªÉm: $score/$total ‚Ä¢ üïì $dateStr")
                }
            }
            .addOnFailureListener { e ->
                Log.e("HistoryFragment", "L·ªói t·∫£i d·ªØ li·ªáu l·ªãch s·ª≠", e)
                Toast.makeText(requireContext(), "L·ªói t·∫£i l·ªãch s·ª≠: ${e.message}", Toast.LENGTH_LONG).show()
                addLine("‚ùå L·ªói t·∫£i d·ªØ li·ªáu l·ªãch s·ª≠", gray = true)
            }
    }

    private fun addLine(content: String, gray: Boolean = false) {
        val tv = TextView(requireContext()).apply {
            text = content
            textSize = 18f
            setPadding(0, 16, 0, 16)
            setTextColor(if (gray) Color.GRAY else Color.BLACK)
        }
        historyContainer.addView(tv)
    }
}
